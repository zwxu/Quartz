<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:jaxws="http://cxf.apache.org/jaxws" 
    xmlns:jaxrs="http://cxf.apache.org/jaxrs"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                       http://www.springframework.org/schema/context   
    					http://www.springframework.org/schema/context/spring-context-3.0.xsd   
                       http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
                       http://cxf.apache.org/jaxrs  
                       http://cxf.apache.org/schemas/jaxrs.xsd
                       http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
						
	    <!-- 启动触发器的配置开始 -->  
    <bean name="startQuertz" lazy-init="false" autowire="no"  
        class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
        <property name="triggers">  
            <list>  
                <ref bean="myJobTrigger" />  
            </list>  
        </property>  
    </bean>  
    <!-- 启动触发器的配置结束 -->  
  
    <!-- 调度的配置开始 -->  
    <!--  
        quartz-1.8以前的配置   
    <bean id="myJobTrigger"  
        class="org.springframework.scheduling.quartz.CronTriggerBean">  
        <property name="jobDetail">  
            <ref bean="myJobDetail" />  
        </property>  
        <property name="cronExpression">  
            <value>0/1 * * * * ?</value>  
        </property>  
    </bean>  
    -->  
    <!-- quartz-2.x的配置 -->  
    <bean id="myJobTrigger"  
        class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
        <property name="jobDetail">  
            <ref bean="myJobDetail" />  
        </property>  
        <property name="cronExpression">  
            <value>0/5 * 15 * * ?</value>  
        </property>  
    </bean>  
    <!-- 调度的配置结束 -->  
  
    <!-- job的配置开始 -->  
    <bean id="myJobDetail"  
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
        <property name="targetObject">  
            <ref bean="myJob" />  
        </property>  
        <property name="targetMethod">  
            <value>work</value>  
        </property>  
    </bean>  
    <!-- job的配置结束 -->  
  
    <!-- 工作的bean -->  
    <bean id="myJob" class="com.ustc.test.MyJob" /> 
	<!-- 开启mvc注解 -->
	<mvc:annotation-driven />
                       
   <!-- 注解扫描包 -->
	<!-- <context:component-scan base-package="com.ustc" /> -->
     
    
 	<bean id="personService" class="com.ustc.service.PersonServiceImpl" />
 	<!-- aop start-->
     
    <bean id="userServiceImpl"  
        class="com.ustc.service.UserServiceImpl" />  
  
    <bean id="userInterceptor" class="com.ustc.interceptor.UserInterceptor" />  
  
    <bean id="userService"  
        class="org.springframework.aop.framework.ProxyFactoryBean">  
      <!-- 代理接口 -->  
        <property name="proxyInterfaces">  
            <value>com.ustc.service.UserService</value>  
        </property>  
       <!-- 目标实现类 -->  
        <property name="target">  
            <ref local="userServiceImpl" />   
      </property>  
        <!-- 拦截器 -->  
        <property name="interceptorNames">  
            <list>  
                <value>userInterceptor</value>  
            </list>  
        </property>  
    </bean>  
  <!-- aop end-->
 
     
	
    <!-- soap webservice -->  
    <jaxws:endpoint id="helloService" implementor="com.ustc.service.HelloServiceImpl" address="/helloService" />
    <!-- restful webservice -->  
   <!--  <jaxrs:server id="rs1" address="/rs1">  
        <jaxrs:serviceBeans>  
            <ref bean="restSample" />  
        </jaxrs:serviceBeans>  
        <jaxrs:providers>  
            <bean class="org.codehaus.jackson.jaxrs.JacksonJsonProvider" />  
        </jaxrs:providers>  
    </jaxrs:server>  
    <jaxrs:server id="rs2" address="/rs2">  
        <jaxrs:serviceBeans>  
            <ref bean="personService" />  
        </jaxrs:serviceBeans>  
        <jaxrs:providers>  
            <bean class="org.codehaus.jackson.jaxrs.JacksonJsonProvider" />  
        </jaxrs:providers>  
    </jaxrs:server>   -->
    


        
</beans>